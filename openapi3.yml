openapi: "3.0.3"

info:
  title: "StockGPT API"
  description: |-
    StockGPT API from Rails API.
  version: "1.0.0"

servers:
  - url: https://api.example.com/api/v1
    description: production
  - url: https://{environment}.api.example.com/api/v1
    variables:
      environment:
        default: dev
        enum:
          - dev
          - staging
    description: develop
  - url: "{protocol}://{host}:{port}/api/v1"
    description: local
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        enum:
          - '443'
          - '8443'
        default: '443'

tags:
  - name: User
    description: Access to user model.

paths:
  /users:
    post:
      tags:
      - "User"
      summary: CreateUser
      operationId: createUser
      requestBody:
        - $ref: '#/components/requestBodies/CreateUserRequestBody'
      responses:
        default:
          description: 作成済みユーザー
          content:
            application/json:
              schema:
                - $ref: '#/components/schemas/UserModel'
  
    get:
      tags:
      - "User"
      summary: ユーザ一覧取得
      operationId: getUserList
      responses:
        default:
          description: ユーザー一覧
          - $ref: '#/components/schemas/User'
    
  /users/new:
    get:
      tags:
      - "User"
      summary: NewUser
      operationId: newUser
      responses:
        default:
          description: ユーザー作成
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'


  /users/{id}:
    get:
      tags:
      - "User"
      summary: ユーザー取得
      operationId: getUser
      parameters:
      - $ref: '#/components/parameters/UserId'
      responses:
        default:
          description: ユーザー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  
    patch:
      tags:
      - "User"
      summary: ユーザー更新
      operationId: updateUser
      parameters:
      - $ref: '#/components/parameters/UserId'
      requestBody:
        description: ユーザー更新データ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDynamicProps'

      responses:
        default:
          description: 更新済みユーザー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      tags:
      - "User"
      summary: ユーザー削除
      operationId: deleteUser
      parameters:
      - $ref: '#/components/parameters/UserId'
      responses:
        default:
          description: 削除済みユーザー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  parameters:
    UserId:
      name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    UserDynamicProps:
      type: object
      properties:
        title:
          type: string
          description: タイトル
          example: CRUDでプロパティが変わるモデルをOpenAPIで書くときの定義分割
        content:
          type: string
          description: 内容
          example: |
            ヘッダー
            内容1
            内容2

    UserStaticProps:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 投稿時承認者のユーザーID
          example: 2
        group_id:
          type: integer
          format: int64
          description: 投稿時承認者のユーザーID
          example: 2
        created_at:
          type: string
          format: int64
          description: 投稿時承認者のユーザーID
          example: 2023-01-21T17:32:28Z
        updated_at:
          type: string
          format: int64
          description: 投稿時承認者のユーザーID
          example: 2023-01-21T17:32:28Z
          
    CreateTimeStamps:
      description: TimeStamps Model
      required:
        - created_at
        - updated_at
      type: object
      properties:
        created_at:
          title: Created datetime.
          type: string
          format: date-time
          example: 2023-01-21T17:32:28Z
        updated_at:
          title: Updated datetime.
          type: string
          format: date-time
          example: 2023-01-21T17:32:28Z
          
    UpdateTimeStamps:
      description: Updated TimeStamps Model
      required:
        - updated_at
      type: object
      properties:
        updated_at:
          title: Updated datetime.
          type: string
          format: date-time
          example: 2023-04-12T01:41:23Z
    
    ArticleStaticProps:
      type: object
      properties:
       review_user_id:
          type: integer
          format: int64
          description: 投稿時承認者のユーザーID
          example: 2

    UserAdminOption:
      type: object
      properties:
        admin:
          type: boolean
          example: true
          
    UserBusinessOption:
      type: object
      properties:
        business:
          type: boolean
          example: false
          
    UserModel:
      type: object
      description: User
      required:
        - id
        - email
        - group_id
        - encrypted_password
        - admin
        - business
        - created_at
        - updated_at
      properties:
        allOf:
          - $ref: '#/components/schemas/UserDynamicProps'
          - $ref: '#/components/schemas/UserStaticProps'
          - $ref: '#/components/schemas/UserAdminOption'
          - $ref: '#/components/schemas/UserBusinessOption'
  
  #-------------------------------
  # Reusable request body
  #-------------------------------  
  requestBodies:
    CreateUserRequestBody:
      description: user data
      required: true
      content:
        application/json:
          schema:
            - $ref: '#/components/schemas/User'
            
    UpdateUserRequestBody:
      description: user data
      required: true
      content:
        application/json:
          schema:
            - $ref: '#/components/schemas/User'


  #-------------------------------
  # Reusable responses
  #-------------------------------
          
          
          
          
          
          
          